<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title><%= movie.title %> - Details</title>

    <!-- Bootstrap CSS -->
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css"
      rel="stylesheet"
    />

    <!-- External CSS -->
    <link rel="stylesheet" href="/css/styles.css" />
    <link rel="stylesheet" href="/css/movie.css" />

    <!-- Icons -->
    <link
      href="https://cdn.jsdelivr.net/npm/remixicon@3.5.0/fonts/remixicon.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
    />

    <!-- Toastify CSS and JS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css" />
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
  </head>
  <body>
    <!-- Navbar -->
    <%- include('../partials/navbar.ejs') %>

    <!-- IMDb-Inspired Movie Detail Section -->
    <section class="container my-5 pt-5 d-flex justify-content-center">
      <div class="movie-detail-section w-100">
        <!-- Trailer on the left -->
        <div class="trailer-embed d-flex justify-content-center align-items-start flex-column">
          <% if (movie.trailerURL) { %>
          <div class="ratio ratio-16x9 w-100">
            <iframe
              src="<%= movie.trailerURL.replace('watch?v=', 'embed/') %>"
              title="Trailer"
              frameborder="0"
              allowfullscreen
            ></iframe>
          </div>
          <% } %>
          <div class="description mt-4"> <%= movie.description %> </div>
        </div>

        <!-- Poster and info on the right -->
        <div class="d-flex flex-column align-items-center w-100">
          <img
            src="<%= movie.posterURL %>"
            alt="<%= movie.title %> poster"
            class="img-fluid mb-3"
          />
          <h1 class="text-center mb-3"> <%= movie.title %> </h1>
          <div class="meta d-flex flex-column align-items-center mb-3">
            <span><i class="fa-solid fa-calendar"></i> <%= new Date(movie.releasedate).getFullYear() %></span>
            <span><i class="fa-solid fa-clock"></i> <%= movie.duration %> min</span>
            <span><i class="fa-solid fa-film"></i> <%= movie.genre.join(', ') %></span>
            <span><i class="fa-solid fa-star"></i> <span style='color:#f5c518'><%= movie.rating %></span>/10</span>
          </div>

          <% if (user) { %>
          <div class="my-2 text-center">
            <button 
              class="btn save-to-list"
              data-movie-id="<%= movie._id %>"
              data-in-watchlist="<%= user.watchlist && user.watchlist.includes(movie._id) %>">
              <i class="fas fa-heart"></i> 
              <span class="button-text">
                <%= user.watchlist && user.watchlist.includes(movie._id) ? 'Remove from Watchlist' : 'Add to Watchlist' %>
              </span>
            </button>
          </div>
          <% } %>

          <!-- Cast Circle Cards -->
          <% if (movie.cast && movie.cast.length > 0) { %>
            <div class="cast-section mt-4 w-100 text-center">
              <h4 class="text-light mb-3">Cast</h4>
              <div class="d-flex flex-wrap justify-content-center gap-3">
                <% movie.cast.forEach(castMember => { %>
                  <a href="/cast/<%= castMember._id %>" class="text-decoration-none">
                    <div class="cast-card text-center">
                      <img
                        src="<%= castMember.photoURL || castMember.profileImageURL %>"
                        alt="<%= castMember.name %>"
                        class="rounded-circle mb-2"
                      />
                      <small class="text-light d-block"><%= castMember.name %></small>
                    </div>
                  </a>
                <% }) %>
              </div>
            </div>
          <% } %>
        </div>
      </div>
    </section>

    <!-- You May Like Section -->
    <% if (relatedMovies && relatedMovies.length > 0) { %>
      <section class="you-may-like-section container my-5">
        <h2>You May Like</h2>
        <div class="row">
          <% relatedMovies.forEach(similar => { %>
            <div class="col-6 col-sm-4 col-md-3 mb-4">
              <a href="/api/movies/<%= similar._id %>" class="text-decoration-none">
                <div class="card h-100">
                  <img
                    src="<%= similar.posterURL %>"
                    class="card-img-top"
                    alt="<%= similar.title %> poster"
                  />
                  <div class="card-body text-center">
                    <h6 class="card-title"><%= similar.title %></h6>
                  </div>
                </div>
              </a>
            </div>
          <% }) %>
        </div>
      </section>
    <% } %>

    <div id="comments-section" class="container my-5">
      <h3 class="text-light">User Reviews</h3>
      <div id="comments-list" class="mb-3"></div>
      <% if (user) { %>
        <form id="commentForm">
          <textarea name="text" required placeholder="Write your review..."></textarea>
          <input type="number" name="rating" min="1" max="10" required placeholder="Rating (1-10)">
          <button type="submit">Submit</button>
        </form>
      <% } else { %>
        <p>Please <a href="/login">login</a> to post a comment.</p>
      <% } %>
    </div>

    <!-- Inject current user ID for JS -->
    <script>
      window.CURRENT_USER_ID = "<%= user ? (user._id || user.id) : '' %>";
    </script>

    <!-- Footer -->
    <%- include('../partials/footer.ejs') %>

    <!-- Bootstrap JS Bundle -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>

    <!-- Custom JS -->
    <script type="module" src="/js/script.js"></script>

    <script type="module">
      import showFunToast from "/js/toast.js";

      document.querySelectorAll(".save-to-list").forEach((btn) => {
        btn.addEventListener("click", async () => {
          const movieId = btn.dataset.movieId;
          const isInWatchlist = btn.dataset.inWatchlist === "true";
          const method = isInWatchlist ? "DELETE" : "POST";
          
          try {
            const res = await fetch(`/api/mylist/${movieId}`, {
              method: method,
              credentials: "include",
            });
            const data = await res.json();

            if (res.ok) {
              // Update button state
              btn.dataset.inWatchlist = !isInWatchlist;
              const buttonText = btn.querySelector('.button-text');
              buttonText.textContent = !isInWatchlist ? 'Remove from Watchlist' : 'Add to Watchlist';
              
              // Show appropriate toast message
              if (isInWatchlist) {
                showFunToast("✅ Movie removed from your watchlist!", "linear-gradient(to right, #00eaff, #00a8b5)");
              } else {
                showFunToast("✅ Movie added to your watchlist!", "linear-gradient(to right, #00eaff, #00a8b5)");
              }
            } else {
              showFunToast(data.message || "❗ Operation failed.", "red");
            }
          } catch (err) {
            showFunToast("❗ Network error", "red");
          }
        });
      });

      const movieId = "<%= movie._id %>";

      async function loadComments() {
        try {
          const res = await fetch(`/api/comments/movie/${movieId}`);
          if (!res.ok) {
            document.getElementById("comments-list").innerHTML = '<div class="text-danger">Failed to load comments.</div>';
            return;
          }
          let comments = await res.json();
          // If backend returns {comments: [...]}, extract the array
          if (comments && comments.comments) comments = comments.comments;
          console.log('DEBUG: Comments loaded', comments); // Debug log
          const list = document.getElementById("comments-list");
          if (!Array.isArray(comments) || comments.length === 0) {
            list.innerHTML = '<div class="text-muted">No comments yet.</div>';
            return;
          }
          list.innerHTML = comments
            .map(c => {
              const isOwner = c.user._id === window.CURRENT_USER_ID;
              return `
                <div class="comment-box mb-3 p-2 border rounded text-light position-relative">
                  ${isOwner ? `<button class=\"btn btn-sm btn-danger delete-comment-btn position-absolute\" style=\"top:0.4rem;right:0.4rem;padding:0.2rem 0.5rem;font-size:1rem;z-index:2;\" data-id=\"${c._id}\"><i class=\"fas fa-trash\"></i></button>` : ''}
                  <div class="comment-username" style="font-size:0.98rem;color:#f5c518;margin-bottom:0.3rem;font-weight:600;text-align:center;">${c.user.name}</div>
                  <div class="star-rating"><i class="fa-solid fa-star"></i> ${c.rating}</div>
                  <p>${c.text}</p>
                </div>`;
            })
            .join("");
        } catch (err) {
          document.getElementById("comments-list").innerHTML = '<div class="text-danger">Error loading comments.</div>';
        }
      }
      
      document.addEventListener("click", async (e) => {
  if (e.target.classList.contains("delete-comment-btn")) {
    const commentId = e.target.dataset.id;
    try {
      const res = await fetch(`/api/comments/${commentId}`, {
        method: "DELETE",
        credentials: "include",
      });
      const data = await res.json();
      if (res.ok) {
        showFunToast(data.message || "✅ Comment deleted", "green");
        loadComments();
      } else {
        showFunToast(data.message || "❗ Error deleting comment", "red");
      }
    } catch (err) {
      showFunToast("❗ Network error", "red");
    }
  }
});

      document.getElementById("commentForm")?.addEventListener("submit", async (e) => {
        e.preventDefault();
        const form = e.target;
        const text = form.text.value.trim();
        const rating = parseInt(form.rating.value);

        try {
          const res = await fetch(`/api/comments/${movieId}`, {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            credentials: "include",
            body: JSON.stringify({ text, rating }),
          });

          const data = await res.json();
          showFunToast(data.message || "✅ Comment added", "linear-gradient(to right, #00eaff, #00a8b5");
          if (res.ok) {
            form.reset(); // Clear the form after successful submit
            await loadComments(); // Ensure comments are refreshed after submit
          }
        } catch (err) {
          showFunToast("❗ Network error", "red");
        }
      });

      loadComments();
    </script>
  </body>
</html>