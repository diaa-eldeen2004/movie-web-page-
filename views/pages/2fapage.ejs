<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>2FA Verification</title>
    <link
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/toastify-js/src/toastify.min.css"
    />
    <script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
    <style>
      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: Arial, sans-serif;
      }

      body {
        background-color: rgb(0, 0, 0);
        color: white;
        min-height: 100vh;
        padding: 40px;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      .container {
        background: rgba(0, 0, 0, 0.9);
        backdrop-filter: blur(10px);
        padding: 40px;
        border-radius: 12px;
        width: 100%;
        max-width: 500px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
        border: 1px solid rgba(255, 255, 255, 0.1);
      }

      h2 {
        font-size: 2rem;
        color: #fff;
        margin-bottom: 30px;
        font-weight: bold;
        text-align: center;
      }

      .form-group {
        margin-bottom: 20px;
      }

      label {
        display: block;
        margin-bottom: 8px;
        color: rgba(255, 255, 255, 0.9);
        font-size: 0.95rem;
      }

      .input-fields {
        display: flex;
        gap: 10px;
        justify-content: center;
        margin-bottom: 20px;
      }

      .input-fields input {
        width: 50px;
        height: 50px;
        text-align: center;
        font-size: 1.5rem;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 8px;
        color: white;
        transition: all 0.3s ease;
      }

      .input-fields input:focus {
        outline: none;
        border-color: rgba(255, 255, 255, 0.5);
        background: rgba(255, 255, 255, 0.15);
      }

      .description {
        text-align: center;
        color: rgba(255, 255, 255, 0.9);
        margin-bottom: 20px;
        font-size: 0.95rem;
      }

      .input-group {
        position: relative;
        display: flex;
        align-items: center;
      }

      .input-group input {
        width: 100%;
        padding: 12px 15px;
        background: rgba(255, 255, 255, 0.1);
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 8px;
        color: white;
        font-size: 1rem;
        transition: all 0.3s ease;
      }

      .input-group input:focus {
        outline: none;
        border-color: rgba(255, 255, 255, 0.5);
        background: rgba(255, 255, 255, 0.15);
      }

      .input-group-text {
        position: absolute;
        right: 10px;
        color: rgba(255, 255, 255, 0.7);
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .input-group-text:hover {
        color: white;
      }

      .action-btns {
        display: flex;
        gap: 10px;
        margin-top: 20px;
      }

      .verify,
      .clear {
        flex: 1;
        padding: 12px;
        text-align: center;
        border-radius: 8px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-decoration: none;
        font-weight: bold;
      }

      .verify {
        background: linear-gradient(to right, #00eaff, #00a8b5);
        color: #000;
      }

      .verify:hover {
        transform: translateY(-2px);
        box-shadow: 0 5px 20px rgba(0, 234, 255, 0.2);
      }

      .clear {
        background: rgba(255, 255, 255, 0.1);
        color: white;
        border: 1px solid rgba(255, 255, 255, 0.2);
      }

      .clear:hover {
        background: rgba(255, 255, 255, 0.15);
      }

      .loginButton {
        width: 100%;
        padding: 12px;
        background: rgba(255, 255, 255, 0.1);
        color: white;
        border: 1px solid rgba(255, 255, 255, 0.2);
        border-radius: 8px;
        cursor: pointer;
        font-size: 1rem;
        transition: all 0.3s ease;
        text-decoration: none;
        text-align: center;
        display: block;
        margin-top: 20px;
      }

      .loginButton:hover {
        background: rgba(255, 255, 255, 0.15);
        color: white;
      }
    </style>
  </head>
  <body>
    <div class="container">
      <h2>Verify & Reset Password</h2>
      <form id="twofactor" class="form">
        <p class="description">
          Enter the two-factor authentication code provided by the authenticator
          app
        </p>
        <div class="input-fields">
          <input
            type="tel"
            maxlength="1"
            pattern="[0-9]"
            inputmode="numeric"
            style="text-transform: uppercase"
          />
          <input
            type="tel"
            maxlength="1"
            pattern="[0-9]"
            inputmode="numeric"
            style="text-transform: uppercase"
          />
          <input
            type="tel"
            maxlength="1"
            pattern="[0-9]"
            inputmode="numeric"
            style="text-transform: uppercase"
          />
          <input
            type="tel"
            maxlength="1"
            pattern="[0-9]"
            inputmode="numeric"
            style="text-transform: uppercase"
          />
          <input
            type="tel"
            maxlength="1"
            pattern="[0-9]"
            inputmode="numeric"
            style="text-transform: uppercase"
          />
          <input
            type="tel"
            maxlength="1"
            pattern="[0-9]"
            inputmode="numeric"
            style="text-transform: uppercase"
          />
        </div>

        <div class="form-group">
          <label for="new-password">New Password</label>
          <div class="input-group">
            <input
              name="password"
              type="password"
              id="resetpasswordInput"
              placeholder="Create a new password*"
              required
            />
            <span
              class="input-group-text password-toggle"
              id="resetpasswordToggle"
            >
              <i class="fa-solid fa-lock" id="resetpasswordIcon"></i>
            </span>
          </div>
        </div>

        <div class="action-btns">
          <a class="verify" id="verifyBtn">Verify & Update</a>
          <a class="clear" id="clearfield">Clear</a>
        </div>
        <a href="/login" class="loginButton">
          <i class="fas fa-arrow-left"></i> Back to Login
        </a>
      </form>
    </div>

    <script type="module">
      import showFunToast from "/js/toast.js";

      document.addEventListener("DOMContentLoaded", function () {
        const inputs = document.querySelectorAll(".input-fields input");
        const verifyBtn = document.getElementById("verifyBtn");
        const clearBtn = document.getElementById("clearfield");
        const passwordInput = document.getElementById("resetpasswordInput");
        const passwordToggle = document.getElementById("resetpasswordToggle");
        const passwordIcon = document.getElementById("resetpasswordIcon");

        // Handle input focus and auto-advance
        inputs.forEach((input, index) => {
          input.addEventListener("input", function (e) {
            // Convert to uppercase
            this.value = this.value.toUpperCase();

            if (this.value.length === 1) {
              if (index < inputs.length - 1) {
                inputs[index + 1].focus();
              }
            }
          });

          input.addEventListener("keydown", function (e) {
            if (e.key === "Backspace" && !this.value && index > 0) {
              inputs[index - 1].focus();
            }
          });

          // Add paste event listener
          input.addEventListener("paste", function (e) {
            e.preventDefault();
            const pastedData = (e.clipboardData || window.clipboardData)
              .getData("text")
              .toUpperCase();

            // Filter out non-alphanumeric characters
            const cleanData = pastedData.replace(/[^A-Z0-9]/g, "");

            // Distribute the pasted data across inputs
            for (let i = 0; i < cleanData.length && i < inputs.length; i++) {
              inputs[i].value = cleanData[i];
            }

            // Focus the next empty input or the last input
            const nextEmptyIndex =
              cleanData.length < inputs.length
                ? cleanData.length
                : inputs.length - 1;
            inputs[nextEmptyIndex].focus();
          });
        });

        // Password toggle
        passwordToggle.addEventListener("click", function () {
          const type =
            passwordInput.getAttribute("type") === "password"
              ? "text"
              : "password";
          passwordInput.setAttribute("type", type);
          passwordIcon.classList.toggle("fa-lock");
          passwordIcon.classList.toggle("fa-lock-open");
        });

        // Clear fields
        clearBtn.addEventListener("click", function () {
          inputs.forEach((input) => (input.value = ""));
          passwordInput.value = "";
          inputs[0].focus();
        });

        // Verify and update
        verifyBtn.addEventListener("click", async function () {
          const code = Array.from(inputs)
            .map((input) => input.value)
            .join("");
          const password = passwordInput.value;

          // Validate code
          if (code.length !== 6) {
            showFunToast("❌ Please enter a valid 6-digit code.", "red");
            return;
          }

          // Validate password
          if (passwordInput.length < 6) {
            showFunToast("❌ Password does not meet requirements.", "red");
            return;
          }

          try {
            const response = await fetch("/api/auth/reset-password", {
              method: "POST",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify({
                code,
                newPassword:password,
              }),
            });

            const data = await response.json();

            if (response.ok) {
              showFunToast(
                "✅ Password reset successful!",
                "linear-gradient(to right, #00eaff, #00a8b5)"
              );
              setTimeout(() => {
                window.location.href = "/login";
              }, 1500);
            } else {
              showFunToast(data.message || "❌ Verification failed.", "red");
            }
          } catch (err) {
            console.error("Verification error:", err);
            showFunToast("❌ Server error occurred.", "red");
          }
        });
      });
    </script>
  </body>
</html>
